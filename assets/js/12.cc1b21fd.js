(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{58:function(n,t,e){"use strict";e.r(t);var a=e(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"content"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('//变换函数的工具类\nfunction css(obj,attr,value){\n    if(!obj.transform){\n      obj.transform={};\n    }\n\n    if(arguments.length>2){//设置\n      obj.transform[attr]=value;\n      var text ="";\n      for(var item in obj.transform){\n        switch (item){\n          case "rotate":\n          case "skewX":\n          case "skewY":\n          case "skew":\n            text += item+"("+obj.transform[item]+"deg) " \n            break;\n          case "translateX":\n          case "translateY":\n          case "translateZ":\n          case "translate":\n            text += item+"("+obj.transform[item]+"px) " \n            break;\n          case "scale":\n          case "scaleX":\n          case "scaleY":\n            text += item+"("+obj.transform[item]+") " \n            break;\n        }\n      }\n      obj.style.webkitTransform=obj.style.transform = text;\n\n    }else{//读取\n\n      value = obj.transform[attr];\n      if(typeof value == "undefined"){\n        //返回默认值\n        if(attr == "scale" || attr == "scaleX" || attr == "scaleY"){\n          return 1;\n        }else{\n          return 0;\n        }\n      }\n\n      return value;\n    }\n  }\n\n//自定义滑屏组件\nfunction drag(wrap,index,callBack){\n    var child = wrap.children[index];\n    css(child,"translateZ",0.001);//3d加速 开启我们的GPU进程\n\n    var step = 0;\n//\tvar stratY =0;\n//\tvar elementY = 0;\n    var startPoint={};\n    var elementPoint={};\n    var min = wrap.clientHeight - child.offsetHeight;\n\n    var lastTime =0;\n    var lastPoint = 0;\n    var timeValue = 1;//时间差值,避免初始点击speed值为undefined\n    var disValue = 0;//距离的差值\n\n    var isY=true;\n    var isFirst=true;\n\n    var Tween ={\n      SineOut: function(t,b,c,d){\n                  return c * Math.sin(t/d * (Math.PI/2)) + b;\n              },\t\n          BackOut: function(t,b,c,d,s){\n                  if (s == undefined) s = 1.70158;\n              return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\n          }\n    }\n\n    wrap.addEventListener("touchstart",function(ev){\n      min = wrap.clientHeight - child.offsetHeight;\n//\t\t\t\tchild.style.transition ="none";\n      clearInterval(child.clear);\n\n//\t\tvar touch = ev.changedTouches[0];\n//\t\tstratY = touch.clientY;\n//\t\telementY = css(child,"translateY");\n      startPoint = {clientX:ev.changedTouches[0].clientX,clientY:ev.changedTouches[0].clientY};\n      elementPoint.elementY = css(child,"translateY");\n      elementPoint.elementX = css(child,"translateX");\n\n      lastTime=new Date().getTime();//毫秒数\n      lastPoint = startPoint.clientY;\n      timeValue = 1;//时间差值,避免初始点击speed值为undefined\n      disValue = 0;//距离的差值\n\n      if(callBack&&callBack["start"]){\n        callBack["start"]();\n      }\n\n      isY=true;\n      isFirst=true;\n    })\n\n    wrap.addEventListener("touchmove",function(ev){\n      if(!isY){\n        return;\n      }\n\n//\t\tvar touch = ev.changedTouches[0]; \n//\t\tvar nowY = touch.clientY;\n//\t\tvar dis = nowY -stratY;\n      var movePoint =ev.changedTouches[0]; \n      var\tdisX = movePoint.clientX - startPoint.clientX;\n      var\tdisY = movePoint.clientY - startPoint.clientY;\n\n\n      if(isFirst){\n        isFirst=false;\n        if(Math.abs(disX)>Math.abs(disY)){\n          isY=false;\n          return;\n        }\n      }\n\n      var translateY = elementPoint.elementY+disY;\n\n      if(translateY>0){\n        step =0.6- translateY / (document.documentElement.clientHeight*3);\n        translateY=step*translateY;\n      }\n      if(translateY<min){\n        var overDis = min - translateY;\n        step =0.6 - overDis / (document.documentElement.clientHeight*3);\n        translateY =min - overDis*step;\n      }\n\n\n      var nowTime = new Date().getTime();\n      var nowPoint = movePoint.clientY;\n      timeValue = nowTime - lastTime;\n      disValue = nowPoint - lastPoint;\n      lastTime = nowTime;\n      lastPoint = nowPoint;\n\n      css(child,"translateY",translateY);\n\n      if(callBack&&callBack["moving"]){\n        callBack["moving"]();\n      }\n    })\n\n    wrap.addEventListener("touchend",function(){\n      var speed = disValue/timeValue;\n//\t\t\t\tif(Math.abs(speed)<0.2){\n//\t\t\t\t\treturn;\n//\t\t\t\t}\n      var left = speed*300;\n      var translateY = css(child,"translateY");\n      var target = translateY + left;\n//\t\t\t\tvar bessel = "";\n      var type="SineOut";\n      var time =0;\n      time=Math.abs(speed)*0.4;\n      time=time<0.3?0.3:time;\n\n      if(target>0){\n        target = 0;\n        type="BackOut";\n//\t\t\t\t\tbessel ="cubic-bezier(.08,1.44,.6,1.46)";\n      }\n      if(target<min){\n        target = min;\n        type="BackOut";\n//\t\t\t\t\tbessel ="cubic-bezier(.08,1.44,.6,1.46)";\n      }\n\n\n//\t\tchild.style.transition =time+"s "+bessel;\n//\t\tcss(child,"translateY",target);\n      move(target,time,type);\n\n      if(callBack&&callBack["end"]){\n        callBack["end"]();\n      }\n    })\n\n\n\n    function move(target,time,type){\n      //\t\tt:代表当前次数\n      //\t\tb:代表初始的运动位置\n      //\t\tc:代表目标位置与初始位置之间的差值\n      //\t\td:总次数\n      //\t\ts:回弹距离\n      var t=0;\n      var b=css(child,"translateY");\n      var c=target - b;\n      var d=time/0.01;\n\n      clearInterval(child.clear);\n      child.clear=setInterval(function(){\n          t++;\n          if(t>d){\n            clearInterval(child.clear);\n            if(callBack&&callBack["over"]){\n              callBack["over"]();\n            }\n          }else{\n            var top =Tween[type](t,b,c,d);\n            css(child,"translateY",top);\n            if(callBack&&callBack["moving"]){\n              callBack["moving"]();\n            }\n          }\n        },10);\n      }\n  }\n')])])])}],!1,null,null,null);t.default=s.exports}}]);